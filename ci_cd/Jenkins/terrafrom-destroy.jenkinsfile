pipeline{
    agent any
    environment {
      CLOUD_ID = credentials('yandex-cloud-id') // Jenkins credential для cloud_id
      FOLDER_ID = credentials('yandex-folder-id') // Jenkins credential для folder_id
      YC_TOKEN = credentials('yandex-token') // Jenkins credential для токена Яндекса
    }
    stages{
        stage('Generate creds.tfvars') {
          steps {
            script {
              // Создание файла creds.tfvars с использованием креденшиалов от дженкинса
              sh """
              echo 'cloud_id  = "${CLOUD_ID}"' > ci_cd/Terraform/creds.tfvars
              echo 'folder_id = "${FOLDER_ID}"' >> ci_cd/Terraform/creds.tfvars
              echo 'token     = "${YC_TOKEN}"' >> ci_cd/Terraform/creds.tfvars
              """
            }
          }
        }
        stage('Generate cloud-config') {
          steps {
            withCredentials([string(credentialsId: 'terraform-ssh-pubkey', variable: 'SSH_PUBKEY')]) {
              script {
                // Считываем публичный ключ
                def sshPubKey = "${SSH_PUBKEY}".trim()

                // Заменяем {{ ssh_key }} в cloud-config на публичный ключ
                sh """
                  sed 's|{{ ssh_key }}|${sshPubKey}|' ci_cd/Terraform/cloud-config > ci_cd/Terraform/cloud-config-gen
                """
              }
            }
          }
        }
        stage('Destroy terraform infra') {
          steps {
            script {
              sh 'terraform destroy -var-file=creds.tfvars -var-file=vars.tfvars -auto-approve'
            }
          }
        }
    }
    post{
      always {
        cleanWs()
      }
    }
}