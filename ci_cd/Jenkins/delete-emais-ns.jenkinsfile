pipeline {
    agent any
    environment {
        DOCKER_CREDS = 'dockerhub-credentials-id'
        TG_BOT_TOKEN = credentials('telegram-bot-token')
        KUBECONFIG_FILE = '/tmp/kubeconfig'
        CLOUD_ID = credentials('yandex-cloud-id')
        FOLDER_ID = credentials('yandex-folder-id')
        YC_TOKEN = credentials('yandex-token')
        PATH = "${env.PATH}:/home/jenkins/yandex-cloud/bin" // Добавляем путь к yc CLI
  }
  stages {
    stage('Checkout github') {
      steps {
        git branch: 'dev', url: 'https://github.com/Macudsc/emais_prct2024.git'
      }
    }
    stage('Prepare tg bot token') {
      steps {
        sh "echo \"tokenn='${TG_BOT_TOKEN}'\" >> Emais/sensetiv.py"
      }
    }
    stage('Generate creds.tfvars') {
      steps {
        script {
          sh """
            echo 'cloud_id  = "${CLOUD_ID}"' > ci_cd/Terraform/creds.tfvars
            echo 'folder_id = "${FOLDER_ID}"' >> ci_cd/Terraform/creds.tfvars
            echo 'token     = "${YC_TOKEN}"' >> ci_cd/Terraform/creds.tfvars
          """
        }
      }
    }
    // Стадия создания клауд-конфига
    stage('Generate cloud-config') {
        steps {
            withCredentials([string(credentialsId: 'terraform-ssh-pubkey', variable: 'SSH_PUBKEY')]) {
                script {
                    def sshPubKey = "${SSH_PUBKEY}".trim()
                    sh """
                      sed 's|{{ ssh_key }}|${sshPubKey}|' ci_cd/Terraform/cloud-config > ci_cd/Terraform/cloud-config-gen
                    """
                    sh "mv ci_cd/Terraform/cloud-config-gen ci_cd/Terraform/cloud-config"
                }
            }
        }
    }
    stage('Install and Use yc CLI') {
      steps {
        sh '''
          curl -sL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          export PATH=$PATH:/home/jenkins/yandex-cloud/bin
          echo "PATH=$PATH"
          yc vpc network list --format json
          yc vpc subnet list --format json
          yc vpc address list --format json
        '''
      }
    }
    stage('Plan and Apply Infrastructure') {
        steps {
            script {
                dir('ci_cd/Terraform') {
                    sh 'yc compute instance delete k8s-master-0 || yc compute instance delete k8s-worker-0 || yc vpc subnet delete subnet1 || yc vpc network delete network1'
                }
            }
        }
    }
  }
    post{
      always {
        cleanWs()
      }
    }
}