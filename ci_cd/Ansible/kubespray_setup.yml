---
# ci_cd/Ansible/kubespray_setup.yml
- name: Deploy Kubernetes Cluster with Kubespray
  hosts: "{{ master_ip }}"
  tasks:
#    - name: Clone Kubespray repository
#      git:
#        repo: "https://github.com/kubernetes-sigs/kubespray.git"
#        dest: ~/kubespray

#    - name: Install Kubespray dependencies
#      pip:
#        requirements: ~/kubespray/requirements.txt
#        executable: pip3

#    - name: Install additional Python package for Kubespray
#      pip:
#        name: ruamel.yaml
#        executable: pip3

#    - name: Copy sample inventory for Kubespray
#      copy:
#        src: ~/kubespray/inventory/sample
#        dest: ~/kubespray/inventory/mycluster
#        remote_src: yes

#    - name: Build inventory from IPs
#      shell: |
#        CONFIG_FILE=~/kubespray/inventory/mycluster/hosts.yaml python3 ~/kubespray/contrib/inventory_builder/inventory.py "{{ ips }}"
#      args:
#        executable: /bin/bash

#    - name: Replace hosts.yaml with prepared one
#      copy:
#        src: ~/hosts.yaml
#        dest: ~/kubespray/inventory/mycluster/hosts.yaml
#        remote_src: yes

#    - name: Deploy Kubernetes cluster using Kubespray
#      shell: |
#        cd ~/kubespray
#        ~/.local/bin/ansible-playbook -i inventory/mycluster/hosts.yaml cluster.yml -b > ~/kubespray/deploy.log 2>&1
#      args:
#        chdir: ~/kubespray
#        executable: /bin/bash
#      async: 3600
#      poll: 60

#    - name: Notify Jenkins that cluster deployment is in progress
#      debug:
#        msg: "Kubernetes cluster deployment is in progress. Check deploy.log for details."

    - name: Create .kube directory
      file:
        path: ~/.kube
        state: directory

    - name: Copy admin kubeconfig
      command: sudo cp /etc/kubernetes/admin.conf ~/.kube/config

    - name: Change ownership of kubeconfig
      command: sudo chown $(id -u):$(id -g) ~/.kube/config

    - name: Apply Local Path Provisioner
      command: kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/deploy/local-path-storage.yaml

    - name: Patch Local Path storage class to be default
      shell: |
        kubectl patch storageclass local-path -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'

    - name: Uncordon all nodes
      shell: |
        kubectl uncordon $(kubectl get nodes --no-headers -o custom-columns=":metadata.name")